name: Test-Pipeline

on: [ push, pull_request ]

jobs:
  unit_test:
    name: Run unit test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.5'
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
        java-version:
          - '8'
        plantuml-version:
          - '1.2020.19'
        assistant-plantuml-version:
          - '1.2020.19'
          - '1.2019.13'
          - '1.2018.14'
          - '1.2017.20'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
      - name: Checkout demo code
        uses: actions/checkout@v2
        with:
          repository: HansBug/plantumlcli-testfile
          path: demo
          fetch-depth: 20
      - name: Set up system dependences
        run: |
          sudo apt-get install -y tree cloc wget curl make
          sudo apt-get install -y graphviz
          sudo dot -c
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
      - name: Test the basic environment
        run: |
          python -V
          pip --version  
          pip list
          java -version
          javac -version
          tree .
      - name: Test the plantuml in use (${{ matrix.plantuml-version }} and ${{ matrix.assistant-plantuml-version }})
        run: |
          java -jar demo/jar/plantuml.${{ matrix.plantuml-version }}.jar -version
          java -jar demo/jar/plantuml.${{ matrix.assistant-plantuml-version }}.jar -version
      - name: Upload coverage data
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          pip install -U coveralls[yaml]
          coveralls